<?php


namespace WeirdoPanelTest\Unit;


use WeirdoPanelTest\TestCase;
use WeirdoPanelTest\Dependencies\WithTranslatable;

class TranslatableTest extends TestCase
{
    private $translatable;

    protected function setUp(): void
    {
        parent::setUp(); // TODO: Change the autogenerated stub

        $this->translatable = new WithTranslatable();
    }

    /** @test * */
    public function it_adds_texts_in_happy_path(){
        $this->translatable->addText('WeirdoPanel');

        $this->assertContains('WeirdoPanel', $this->translatable->getTexts());
        $this->assertArrayHasKey('WeirdoPanel', $this->translatable->getTexts());
    }

    /** @test * */
    public function if_key_is_not_null_it_will_be_used(){
        $this->translatable->addText('Easy but Panel !', 'WeirdoPanel');

        $this->assertContains('Easy but Panel !', $this->translatable->getTexts());
        $this->assertArrayHasKey('WeirdoPanel', $this->translatable->getTexts());
    }

    public function if_key_exists_in_texts_it_wont_be_duplicated()
    {
        $this->translatable->addText('WeirdoPanel');
        $this->assertCount(1, $this->translatable->getTexts());
        $this->assertArrayHasKey('WeirdoPanel', $this->translatable->getTexts());

        $this->translatable->addText('WeirdoPanel');
        $this->assertCount(1, $this->translatable->getTexts());

        $this->translatable->addText('WeirdoPanel', 'WeirdoPanel');
        $this->assertCount(1, $this->translatable->getTexts());

        $this->translatable->addText('WeirdoPanel', 'CustomKey');
        $this->assertCount(2, $this->translatable->getTexts());
    }
}
